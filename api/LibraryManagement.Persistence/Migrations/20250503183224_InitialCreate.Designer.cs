// <auto-generated />
using System;
using LibraryManagement.Persistence.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagement.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250503183224_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryManagement.Domain.Entities.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("AvailableQuantity")
                        .IsConcurrencyToken()
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Books", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Harper Lee",
                            AvailableQuantity = 7,
                            CategoryId = 1,
                            Title = "To Kill a Mockingbird",
                            TotalQuantity = 10
                        },
                        new
                        {
                            Id = 2,
                            Author = "George Orwell",
                            AvailableQuantity = 10,
                            CategoryId = 1,
                            Title = "1984",
                            TotalQuantity = 12
                        },
                        new
                        {
                            Id = 3,
                            Author = "F. Scott Fitzgerald",
                            AvailableQuantity = 5,
                            CategoryId = 1,
                            Title = "The Great Gatsby",
                            TotalQuantity = 8
                        },
                        new
                        {
                            Id = 4,
                            Author = "Jane Austen",
                            AvailableQuantity = 7,
                            CategoryId = 1,
                            Title = "Pride and Prejudice",
                            TotalQuantity = 10
                        },
                        new
                        {
                            Id = 5,
                            Author = "J.D. Salinger",
                            AvailableQuantity = 3,
                            CategoryId = 1,
                            Title = "The Catcher in the Rye",
                            TotalQuantity = 6
                        },
                        new
                        {
                            Id = 6,
                            Author = "Yuval Noah Harari",
                            AvailableQuantity = 11,
                            CategoryId = 3,
                            Title = "Sapiens: A Brief History of Humankind",
                            TotalQuantity = 15
                        },
                        new
                        {
                            Id = 7,
                            Author = "Stephen Hawking",
                            AvailableQuantity = 8,
                            CategoryId = 2,
                            Title = "A Brief History of Time",
                            TotalQuantity = 9
                        },
                        new
                        {
                            Id = 8,
                            Author = "Carl Sagan",
                            AvailableQuantity = 6,
                            CategoryId = 2,
                            Title = "Cosmos",
                            TotalQuantity = 7
                        },
                        new
                        {
                            Id = 9,
                            Author = "Richard Dawkins",
                            AvailableQuantity = 5,
                            CategoryId = 2,
                            Title = "The Selfish Gene",
                            TotalQuantity = 5
                        },
                        new
                        {
                            Id = 10,
                            Author = "Jared Diamond",
                            AvailableQuantity = 9,
                            CategoryId = 3,
                            Title = "Guns, Germs, and Steel",
                            TotalQuantity = 10
                        },
                        new
                        {
                            Id = 11,
                            Author = "Howard Zinn",
                            AvailableQuantity = 4,
                            CategoryId = 3,
                            Title = "A People's History of the United States",
                            TotalQuantity = 7
                        },
                        new
                        {
                            Id = 12,
                            Author = "J.R.R. Tolkien",
                            AvailableQuantity = 18,
                            CategoryId = 4,
                            Title = "The Hobbit",
                            TotalQuantity = 20
                        },
                        new
                        {
                            Id = 13,
                            Author = "J.K. Rowling",
                            AvailableQuantity = 22,
                            CategoryId = 4,
                            Title = "Harry Potter and the Sorcerer's Stone",
                            TotalQuantity = 25
                        },
                        new
                        {
                            Id = 14,
                            Author = "George R.R. Martin",
                            AvailableQuantity = 15,
                            CategoryId = 4,
                            Title = "A Game of Thrones",
                            TotalQuantity = 18
                        },
                        new
                        {
                            Id = 15,
                            Author = "Patrick Rothfuss",
                            AvailableQuantity = 10,
                            CategoryId = 4,
                            Title = "The Name of the Wind",
                            TotalQuantity = 14
                        },
                        new
                        {
                            Id = 16,
                            Author = "Brandon Sanderson",
                            AvailableQuantity = 16,
                            CategoryId = 4,
                            Title = "Mistborn: The Final Empire",
                            TotalQuantity = 16
                        },
                        new
                        {
                            Id = 17,
                            Author = "Walter Isaacson",
                            AvailableQuantity = 9,
                            CategoryId = 5,
                            Title = "Steve Jobs",
                            TotalQuantity = 11
                        },
                        new
                        {
                            Id = 18,
                            Author = "Michelle Obama",
                            AvailableQuantity = 13,
                            CategoryId = 5,
                            Title = "Becoming",
                            TotalQuantity = 13
                        },
                        new
                        {
                            Id = 19,
                            Author = "Laura Hillenbrand",
                            AvailableQuantity = 7,
                            CategoryId = 5,
                            Title = "Unbroken",
                            TotalQuantity = 9
                        },
                        new
                        {
                            Id = 20,
                            Author = "Tara Westover",
                            AvailableQuantity = 8,
                            CategoryId = 5,
                            Title = "Educated",
                            TotalQuantity = 10
                        },
                        new
                        {
                            Id = 21,
                            Author = "Anne Frank",
                            AvailableQuantity = 8,
                            CategoryId = 5,
                            Title = "The Diary of a Young Girl",
                            TotalQuantity = 8
                        },
                        new
                        {
                            Id = 22,
                            Author = "Robert C. Martin",
                            AvailableQuantity = 12,
                            CategoryId = 6,
                            Title = "Clean Code: A Handbook of Agile Software Craftsmanship",
                            TotalQuantity = 15
                        },
                        new
                        {
                            Id = 23,
                            Author = "Andrew Hunt, David Thomas",
                            AvailableQuantity = 11,
                            CategoryId = 6,
                            Title = "The Pragmatic Programmer: Your Journey to Mastery",
                            TotalQuantity = 12
                        },
                        new
                        {
                            Id = 24,
                            Author = "Steve McConnell",
                            AvailableQuantity = 9,
                            CategoryId = 6,
                            Title = "Code Complete",
                            TotalQuantity = 10
                        },
                        new
                        {
                            Id = 25,
                            Author = "Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides",
                            AvailableQuantity = 6,
                            CategoryId = 6,
                            Title = "Design Patterns: Elements of Reusable Object-Oriented Software",
                            TotalQuantity = 9
                        },
                        new
                        {
                            Id = 26,
                            Author = "Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, Clifford Stein",
                            AvailableQuantity = 5,
                            CategoryId = 6,
                            Title = "Introduction to Algorithms",
                            TotalQuantity = 7
                        },
                        new
                        {
                            Id = 27,
                            Author = "Aldous Huxley",
                            AvailableQuantity = 10,
                            CategoryId = 1,
                            Title = "Brave New World",
                            TotalQuantity = 11
                        },
                        new
                        {
                            Id = 28,
                            Author = "William Golding",
                            AvailableQuantity = 7,
                            CategoryId = 1,
                            Title = "Lord of the Flies",
                            TotalQuantity = 9
                        },
                        new
                        {
                            Id = 29,
                            Author = "Ray Bradbury",
                            AvailableQuantity = 11,
                            CategoryId = 1,
                            Title = "Fahrenheit 451",
                            TotalQuantity = 13
                        },
                        new
                        {
                            Id = 30,
                            Author = "Douglas Adams",
                            AvailableQuantity = 14,
                            CategoryId = 1,
                            Title = "The Hitchhiker's Guide to the Galaxy",
                            TotalQuantity = 15
                        },
                        new
                        {
                            Id = 31,
                            Author = "Herman Melville",
                            AvailableQuantity = 6,
                            CategoryId = 1,
                            Title = "Moby Dick",
                            TotalQuantity = 6
                        },
                        new
                        {
                            Id = 32,
                            Author = "Leo Tolstoy",
                            AvailableQuantity = 3,
                            CategoryId = 1,
                            Title = "War and Peace",
                            TotalQuantity = 5
                        },
                        new
                        {
                            Id = 33,
                            Author = "Charles Darwin",
                            AvailableQuantity = 7,
                            CategoryId = 2,
                            Title = "The Origin of Species",
                            TotalQuantity = 8
                        },
                        new
                        {
                            Id = 34,
                            Author = "James D. Watson",
                            AvailableQuantity = 5,
                            CategoryId = 2,
                            Title = "The Double Helix",
                            TotalQuantity = 6
                        },
                        new
                        {
                            Id = 35,
                            Author = "Rachel Carson",
                            AvailableQuantity = 7,
                            CategoryId = 2,
                            Title = "Silent Spring",
                            TotalQuantity = 7
                        },
                        new
                        {
                            Id = 36,
                            Author = "Rebecca Skloot",
                            AvailableQuantity = 8,
                            CategoryId = 2,
                            Title = "The Immortal Life of Henrietta Lacks",
                            TotalQuantity = 10
                        },
                        new
                        {
                            Id = 37,
                            Author = "Thomas S. Kuhn",
                            AvailableQuantity = 4,
                            CategoryId = 2,
                            Title = "The Structure of Scientific Revolutions",
                            TotalQuantity = 5
                        },
                        new
                        {
                            Id = 38,
                            Author = "David McCullough",
                            AvailableQuantity = 9,
                            CategoryId = 3,
                            Title = "1776",
                            TotalQuantity = 9
                        },
                        new
                        {
                            Id = 39,
                            Author = "William L. Shirer",
                            AvailableQuantity = 5,
                            CategoryId = 3,
                            Title = "The Rise and Fall of the Third Reich",
                            TotalQuantity = 6
                        },
                        new
                        {
                            Id = 40,
                            Author = "Mary Beard",
                            AvailableQuantity = 7,
                            CategoryId = 3,
                            Title = "SPQR: A History of Ancient Rome",
                            TotalQuantity = 8
                        },
                        new
                        {
                            Id = 41,
                            Author = "Tom Holland",
                            AvailableQuantity = 6,
                            Title = "Rubicon: The Last Years of the Roman Republic",
                            TotalQuantity = 7
                        },
                        new
                        {
                            Id = 42,
                            Author = "Barbara W. Tuchman",
                            AvailableQuantity = 6,
                            CategoryId = 3,
                            Title = "The Guns of August",
                            TotalQuantity = 6
                        },
                        new
                        {
                            Id = 43,
                            Author = "J.R.R. Tolkien",
                            AvailableQuantity = 17,
                            CategoryId = 4,
                            Title = "The Fellowship of the Ring",
                            TotalQuantity = 19
                        },
                        new
                        {
                            Id = 44,
                            Author = "C.S. Lewis",
                            AvailableQuantity = 13,
                            CategoryId = 4,
                            Title = "The Chronicles of Narnia",
                            TotalQuantity = 15
                        },
                        new
                        {
                            Id = 45,
                            Author = "Neil Gaiman",
                            AvailableQuantity = 10,
                            CategoryId = 4,
                            Title = "American Gods",
                            TotalQuantity = 12
                        },
                        new
                        {
                            Id = 46,
                            Author = "Terry Pratchett",
                            AvailableQuantity = 14,
                            CategoryId = 4,
                            Title = "The Color of Magic",
                            TotalQuantity = 14
                        },
                        new
                        {
                            Id = 47,
                            Author = "Ron Chernow",
                            AvailableQuantity = 8,
                            Title = "Alexander Hamilton",
                            TotalQuantity = 10
                        },
                        new
                        {
                            Id = 48,
                            Author = "Doris Kearns Goodwin",
                            AvailableQuantity = 7,
                            CategoryId = 5,
                            Title = "Team of Rivals: The Political Genius of Abraham Lincoln",
                            TotalQuantity = 8
                        },
                        new
                        {
                            Id = 49,
                            Author = "Walter Isaacson",
                            AvailableQuantity = 10,
                            CategoryId = 6,
                            Title = "The Innovators: How a Group of Hackers, Geniuses, and Geeks Created the Digital Revolution",
                            TotalQuantity = 11
                        },
                        new
                        {
                            Id = 50,
                            Author = "Gayle Laakmann McDowell",
                            AvailableQuantity = 15,
                            Title = "Cracking the Coding Interview",
                            TotalQuantity = 20
                        });
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.BookBorrowingRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApproverId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRequested")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("RequestorId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApproverId");

                    b.HasIndex("RequestorId");

                    b.ToTable("BookBorrowingRequests", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ApproverId = 1,
                            DateRequested = new DateTime(2025, 4, 23, 18, 32, 24, 253, DateTimeKind.Utc).AddTicks(4794),
                            RequestorId = 4,
                            Status = "Approved"
                        },
                        new
                        {
                            Id = 2,
                            DateRequested = new DateTime(2025, 4, 28, 18, 32, 24, 253, DateTimeKind.Utc).AddTicks(4829),
                            RequestorId = 5,
                            Status = "Waiting"
                        },
                        new
                        {
                            Id = 3,
                            ApproverId = 2,
                            DateRequested = new DateTime(2025, 5, 1, 18, 32, 24, 253, DateTimeKind.Utc).AddTicks(4831),
                            RequestorId = 6,
                            Status = "Rejected"
                        },
                        new
                        {
                            Id = 4,
                            DateRequested = new DateTime(2025, 5, 2, 18, 32, 24, 253, DateTimeKind.Utc).AddTicks(4833),
                            RequestorId = 4,
                            Status = "Waiting"
                        },
                        new
                        {
                            Id = 5,
                            ApproverId = 1,
                            DateRequested = new DateTime(2025, 4, 18, 18, 32, 24, 253, DateTimeKind.Utc).AddTicks(4834),
                            RequestorId = 7,
                            Status = "Approved"
                        },
                        new
                        {
                            Id = 6,
                            ApproverId = 3,
                            DateRequested = new DateTime(2025, 4, 25, 18, 32, 24, 253, DateTimeKind.Utc).AddTicks(4837),
                            RequestorId = 8,
                            Status = "Approved"
                        },
                        new
                        {
                            Id = 7,
                            DateRequested = new DateTime(2025, 4, 30, 18, 32, 24, 253, DateTimeKind.Utc).AddTicks(4839),
                            RequestorId = 9,
                            Status = "Waiting"
                        },
                        new
                        {
                            Id = 8,
                            DateRequested = new DateTime(2025, 5, 3, 6, 32, 24, 253, DateTimeKind.Utc).AddTicks(4840),
                            RequestorId = 4,
                            Status = "Waiting"
                        },
                        new
                        {
                            Id = 9,
                            ApproverId = 1,
                            DateRequested = new DateTime(2025, 4, 29, 18, 32, 24, 253, DateTimeKind.Utc).AddTicks(4858),
                            RequestorId = 5,
                            Status = "Approved"
                        },
                        new
                        {
                            Id = 10,
                            DateRequested = new DateTime(2025, 5, 2, 23, 20, 24, 253, DateTimeKind.Utc).AddTicks(4861),
                            RequestorId = 5,
                            Status = "Waiting"
                        },
                        new
                        {
                            Id = 11,
                            ApproverId = 2,
                            DateRequested = new DateTime(2025, 4, 27, 18, 32, 24, 253, DateTimeKind.Utc).AddTicks(4863),
                            RequestorId = 6,
                            Status = "Rejected"
                        },
                        new
                        {
                            Id = 12,
                            DateRequested = new DateTime(2025, 5, 2, 6, 32, 24, 253, DateTimeKind.Utc).AddTicks(4865),
                            RequestorId = 6,
                            Status = "Waiting"
                        },
                        new
                        {
                            Id = 13,
                            ApproverId = 3,
                            DateRequested = new DateTime(2025, 5, 2, 13, 44, 24, 253, DateTimeKind.Utc).AddTicks(4868),
                            RequestorId = 6,
                            Status = "Approved"
                        },
                        new
                        {
                            Id = 14,
                            DateRequested = new DateTime(2025, 4, 30, 6, 32, 24, 253, DateTimeKind.Utc).AddTicks(4869),
                            RequestorId = 10,
                            Status = "Waiting"
                        },
                        new
                        {
                            Id = 15,
                            ApproverId = 1,
                            DateRequested = new DateTime(2025, 4, 30, 13, 44, 24, 253, DateTimeKind.Utc).AddTicks(4871),
                            RequestorId = 10,
                            Status = "Approved"
                        },
                        new
                        {
                            Id = 16,
                            ApproverId = 2,
                            DateRequested = new DateTime(2025, 4, 30, 23, 20, 24, 253, DateTimeKind.Utc).AddTicks(4874),
                            RequestorId = 10,
                            Status = "Approved"
                        },
                        new
                        {
                            Id = 17,
                            DateRequested = new DateTime(2025, 5, 1, 13, 44, 24, 253, DateTimeKind.Utc).AddTicks(4875),
                            RequestorId = 11,
                            Status = "Waiting"
                        },
                        new
                        {
                            Id = 18,
                            ApproverId = 3,
                            DateRequested = new DateTime(2025, 5, 1, 23, 20, 24, 253, DateTimeKind.Utc).AddTicks(4878),
                            RequestorId = 11,
                            Status = "Rejected"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.BookBorrowingRequestDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("RequestId", "BookId")
                        .IsUnique();

                    b.ToTable("BookBorrowingRequestDetails", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BookId = 1,
                            RequestId = 1
                        },
                        new
                        {
                            Id = 2,
                            BookId = 7,
                            RequestId = 1
                        },
                        new
                        {
                            Id = 3,
                            BookId = 12,
                            RequestId = 1
                        },
                        new
                        {
                            Id = 4,
                            BookId = 2,
                            RequestId = 2
                        },
                        new
                        {
                            Id = 5,
                            BookId = 13,
                            RequestId = 2
                        },
                        new
                        {
                            Id = 6,
                            BookId = 22,
                            RequestId = 2
                        },
                        new
                        {
                            Id = 7,
                            BookId = 33,
                            RequestId = 2
                        },
                        new
                        {
                            Id = 8,
                            BookId = 47,
                            RequestId = 2
                        },
                        new
                        {
                            Id = 9,
                            BookId = 6,
                            RequestId = 3
                        },
                        new
                        {
                            Id = 10,
                            BookId = 18,
                            RequestId = 3
                        },
                        new
                        {
                            Id = 11,
                            BookId = 4,
                            RequestId = 4
                        },
                        new
                        {
                            Id = 12,
                            BookId = 14,
                            RequestId = 4
                        },
                        new
                        {
                            Id = 13,
                            BookId = 26,
                            RequestId = 4
                        },
                        new
                        {
                            Id = 14,
                            BookId = 40,
                            RequestId = 4
                        },
                        new
                        {
                            Id = 15,
                            BookId = 50,
                            RequestId = 5
                        },
                        new
                        {
                            Id = 16,
                            BookId = 17,
                            RequestId = 6
                        },
                        new
                        {
                            Id = 17,
                            BookId = 23,
                            RequestId = 6
                        },
                        new
                        {
                            Id = 18,
                            BookId = 3,
                            RequestId = 7
                        },
                        new
                        {
                            Id = 19,
                            BookId = 10,
                            RequestId = 7
                        },
                        new
                        {
                            Id = 20,
                            BookId = 43,
                            RequestId = 7
                        },
                        new
                        {
                            Id = 21,
                            BookId = 8,
                            RequestId = 8
                        },
                        new
                        {
                            Id = 22,
                            BookId = 27,
                            RequestId = 8
                        },
                        new
                        {
                            Id = 23,
                            BookId = 16,
                            RequestId = 9
                        },
                        new
                        {
                            Id = 24,
                            BookId = 36,
                            RequestId = 9
                        },
                        new
                        {
                            Id = 25,
                            BookId = 44,
                            RequestId = 9
                        },
                        new
                        {
                            Id = 26,
                            BookId = 30,
                            RequestId = 10
                        },
                        new
                        {
                            Id = 27,
                            BookId = 5,
                            RequestId = 11
                        },
                        new
                        {
                            Id = 28,
                            BookId = 32,
                            RequestId = 11
                        },
                        new
                        {
                            Id = 29,
                            BookId = 28,
                            RequestId = 12
                        },
                        new
                        {
                            Id = 30,
                            BookId = 29,
                            RequestId = 12
                        },
                        new
                        {
                            Id = 31,
                            BookId = 31,
                            RequestId = 12
                        },
                        new
                        {
                            Id = 32,
                            BookId = 46,
                            RequestId = 13
                        },
                        new
                        {
                            Id = 33,
                            BookId = 9,
                            RequestId = 14
                        },
                        new
                        {
                            Id = 34,
                            BookId = 24,
                            RequestId = 14
                        },
                        new
                        {
                            Id = 35,
                            BookId = 34,
                            RequestId = 14
                        },
                        new
                        {
                            Id = 36,
                            BookId = 38,
                            RequestId = 14
                        },
                        new
                        {
                            Id = 37,
                            BookId = 42,
                            RequestId = 14
                        },
                        new
                        {
                            Id = 38,
                            BookId = 19,
                            RequestId = 15
                        },
                        new
                        {
                            Id = 39,
                            BookId = 20,
                            RequestId = 15
                        },
                        new
                        {
                            Id = 40,
                            BookId = 49,
                            RequestId = 16
                        },
                        new
                        {
                            Id = 41,
                            BookId = 35,
                            RequestId = 17
                        },
                        new
                        {
                            Id = 42,
                            BookId = 45,
                            RequestId = 17
                        },
                        new
                        {
                            Id = 43,
                            BookId = 25,
                            RequestId = 17
                        },
                        new
                        {
                            Id = 44,
                            BookId = 41,
                            RequestId = 18
                        });
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Fiction"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Science"
                        },
                        new
                        {
                            Id = 3,
                            Name = "History"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fantasy"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Biography"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Technology"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin1@example.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEPTT95ZoG4A1YLWx/ZNulKJnxjPRCHF0YTDIsrWxWmRP758ZKIXwdJeSlJmMUBdBNg==",
                            Role = "Admin",
                            Username = "admin1"
                        },
                        new
                        {
                            Id = 2,
                            Email = "admin2@example.com",
                            PasswordHash = "AQAAAAIAAYagAAAAENU2b+si1vmTif26kOAaQRMGUII5FhFFsfXTj+4Q0EpyKfr3N5sMfyVdPtvXgdAaxw==",
                            Role = "Admin",
                            Username = "admin2"
                        },
                        new
                        {
                            Id = 3,
                            Email = "admin3@example.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEGcCqumrEjHVfWf7fvN4k3Ay8wrKe+HGQeLKLTLcoQBhg8HpByBxmnfrfn1EI+y1/w==",
                            Role = "Admin",
                            Username = "admin3"
                        },
                        new
                        {
                            Id = 4,
                            Email = "user1@example.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEIUwCm938Qh/1WSiFC7ErKwWnDRIxHoLapxEsciuLwR69HmvmO0N0r+956rlB7aYiw==",
                            Role = "User",
                            Username = "user1"
                        },
                        new
                        {
                            Id = 5,
                            Email = "user2@example.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEGN+8nQU5cTdsBc14AvnaPa0lcmShqWEibpFiu7DuLyidQZ9rUQIeZZKeeSFt6D8Nw==",
                            Role = "User",
                            Username = "user2"
                        },
                        new
                        {
                            Id = 6,
                            Email = "user3@example.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEHcZ+9aopLOUH9JJYeBY0NFrtz6jG0fRhkKGCnUCPBlSJpxYWQuXzVlCaA8XeCBnAA==",
                            Role = "User",
                            Username = "user3"
                        },
                        new
                        {
                            Id = 7,
                            Email = "user4@example.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEDTB1D5b/VBWdMCgvHBDKavUXWLUifGYGxKvctESoamJb3OgfGPoTRlC45CwgXniCw==",
                            Role = "User",
                            Username = "user4"
                        },
                        new
                        {
                            Id = 8,
                            Email = "user5@example.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEGeTHbnBhb/wg208idw/LeLTieyIPsbd+XuVB64omUXrVfR5l4J2tHywl7hlr7X/Fg==",
                            Role = "User",
                            Username = "user5"
                        },
                        new
                        {
                            Id = 9,
                            Email = "user6@example.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEG8Yh9n4YfMWgPAGCslqe/3F02k/co4bSVfBfLxBWKZ5MiT05utpDgOft5L9MTaodA==",
                            Role = "User",
                            Username = "user6"
                        },
                        new
                        {
                            Id = 10,
                            Email = "user7@example.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEMeEtFyNMhWR2xj12Mas+X+jJvQJZunTTEjT+EszzlgGuNokNmGe7TWbUeFH+7QGlQ==",
                            Role = "User",
                            Username = "user7"
                        },
                        new
                        {
                            Id = 11,
                            Email = "user8@example.com",
                            PasswordHash = "AQAAAAIAAYagAAAAEAfZb2Nm5E9F78qj/i+H261pOrDd5n+GmNzX1MGSJOxaAmLWK1KKj6SWdHuOUFZa3Q==",
                            Role = "User",
                            Username = "user8"
                        });
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.Book", b =>
                {
                    b.HasOne("LibraryManagement.Domain.Entities.Category", "Category")
                        .WithMany("Books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Category");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.BookBorrowingRequest", b =>
                {
                    b.HasOne("LibraryManagement.Domain.Entities.User", "Approver")
                        .WithMany("RequestsApproved")
                        .HasForeignKey("ApproverId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("LibraryManagement.Domain.Entities.User", "Requestor")
                        .WithMany("RequestsMade")
                        .HasForeignKey("RequestorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Approver");

                    b.Navigation("Requestor");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.BookBorrowingRequestDetail", b =>
                {
                    b.HasOne("LibraryManagement.Domain.Entities.Book", "Book")
                        .WithMany("BorrowingRequestDetails")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("LibraryManagement.Domain.Entities.BookBorrowingRequest", "Request")
                        .WithMany("Details")
                        .HasForeignKey("RequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.Book", b =>
                {
                    b.Navigation("BorrowingRequestDetails");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.BookBorrowingRequest", b =>
                {
                    b.Navigation("Details");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.Category", b =>
                {
                    b.Navigation("Books");
                });

            modelBuilder.Entity("LibraryManagement.Domain.Entities.User", b =>
                {
                    b.Navigation("RequestsApproved");

                    b.Navigation("RequestsMade");
                });
#pragma warning restore 612, 618
        }
    }
}
